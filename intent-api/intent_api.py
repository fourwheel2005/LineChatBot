from flask import Flask, request, jsonify
from pythainlp.tokenize import word_tokenize
from rapidfuzz import fuzz
import os

app = Flask(__name__)

# หมวด intent และ keyword
intent_keywords = {
    "contact": [
        "ติดต่อ", "เบอร์", "โทร", "ไลน์", "ช่องทาง", "ติดต่อได้ที่", "หมายเลข", "ติดต่อกลับ", "สอบถาม",
        "แอดไลน์", "แชท", "แอด", "ส่งข้อความ", "คุยกับแอดมิน", "ติดต่อแอด", "ติดต่อร้าน", "ทางไหน",
        "แชทหา", "line", "ช่องทางการติดต่อ", "แอดไลน์ได้ที่ไหน", "มีเบอร์มั้ย",
        "ขอไลน์หน่อย", "มีไลน์ปะ", "แอดไลน์แป๊บ", "dm ได้มะ", "ทักหาได้ที่ไหน", "อินบ็อกซ์ปะ",
        "ส่งข้อความหาได้ตรงไหน", "มีกลุ่มไหม", "พี่แอดได้มั้ย", "ทักเลยได้ปะ"
    ],
    "price": [
        "ราคา", "บาท", "เท่าไหร่", "เท่าไร", "คิดยังไง", "คิดราคา", "ค่าส่ง", "แพงไหม", "โปรโมชั่น", "ลด", "เรท",
        "เท่าไหร่คะ", "เท่าไหร่ครับ", "ราคาเท่าไหร่", "ราคารวม", "บอกราคา", "สอบถามราคา", "ราคาชิ้นนี้",
        "ค่าบริการ", "ขอราคาด้วย", "ราคาต่อชิ้น", "ราคาทั้งหมด", "ราคาส่ง", "ราคาโปรโมชั่น",
        "ขอราคาหน่อยงับ", "เท่าไรอ่ะ", "เท่าไหร่ง้าบ", "กี่บาทหรอ", "ขอโปรหน่อย", "ลดมั้ยงับ",
        "มีลดไหมแม่", "คิดเท่าไหร่ดีงับ", "มีโปรมั้ย", "ราคาแรงปะเนี่ย"
    ],
    "order": [
        "สั่งซื้อ", "สั่ง", "อยากได้", "จะซื้อ", "สนใจ", "สั่งของ", "ขอสั่ง", "ขอซื้อ", "รับสินค้า", "ต้องการ",
        "สั่งเลย", "ซื้อเลย", "ขอใบเสนอราคา", "สั่งยังไง", "สั่งได้ที่ไหน", "มีของมั้ย", "มีไหม",
        "อยากสั่ง", "สั่งตรงไหน", "กดสั่ง", "สั่งด่วน", "ขอรายละเอียด", "มีขายมั้ย", "รับเลย",
        "สั่งเลยได้ไหม", "ซื้อยังไง", "ต้องทำไงถึงสั่งได้",
        "เอาเลย!", "อยากได้แง", "ขอซื้อออ", "สั่งยังไงว้า", "มีของมะ", "กดตรงไหน", "ขออออ",
        "ยังสั่งทันปะ", "มีมั้ยอะ", "ของยังอยู่มั้ย"
    ],
    "companyAdvantages": [
        "บริษัทมีดีอย่างไร", "จุดเด่นบริษัท", "ดีไหม", "น่าเชื่อถือไหม", "มั่นใจได้ไหม",
        "รีวิวบริษัท", "มีอะไรดี", "ข้อดีของบริษัท", "แนะนำบริษัท", "ทำไมถึงเลือกบริษัทนี้",
        "ข้อได้เปรียบ", "บริษัทนี้ดีกว่าที่อื่นยังไง", "คุณภาพ", "เชื่อถือได้ไหม", "ทำไมถึงดี",
        "เลือกบริษัทนี้ดีไหม", "มีความน่าเชื่อถือหรือไม่", "บริการดีไหม", "การบริการเป็นยังไง",
        "ดีปะ", "โอไหม", "ไว้ใจได้มะ", "รีวิวดีปะ", "ลูกค้าคนอื่นว่าไง", "มีใครเคยซื้อมั้ย",
        "เชื่อได้ชัวร์?", "น่าเชื่อถือมะ"
    ],
    "product": [
        "บริษัทนี้มีสินค้าอะไรบ้าง", "มีสินค้าอะไรบ้าง", "ขายอะไร", "มีขายอะไรบ้าง", "รายการสินค้า", "มีผลิตภัณฑ์อะไรบ้าง",
        "ขายสินค้าประเภทไหน", "สินค้า", "สินค้าอะไร", "ผลิตภัณฑ์", "ให้ดูสินค้าหน่อย", "ขอดูสินค้า",
        "มีอะไรขายบ้างงับ", "ขอดูรูปได้มะ", "แคตตาล็อก", "แคต", "ตัวอย่างสินค้า", "มีอะไรบ้างเอ่ย",
        "ขายอะไรบ้างอะ", "มีอะไรน่าสนมั้ย", "ดูของหน่อย"
    ],
    "payment": [
        "ชำระเงิน", "จ่ายเงิน", "โอนเงิน", "โอนยังไง", "จ่ายยังไง", "มีเก็บปลายทางไหม",
        "วิธีชำระ", "จ่ายผ่านอะไร", "โอนผ่านธนาคาร", "ช่องทางการโอน", "ต้องโอนก่อนไหม",
        "จ่ายยังไงหรอ", "จ่ายแบบไหนได้บ้าง", "มีเก็บเงินปลายทางมะ", "โอนแอปได้มะ",
        "พร้อมเพย์ได้น้า", "จ่ายตอนไหน"
    ],
    "delivery": [
        "จัดส่ง", "ส่งของ", "ส่งยังไง", "ขนส่งอะไร", "ใช้ขนส่งอะไร",
        "กี่วันถึง", "ส่งนานไหม", "ขอเบอร์คนส่ง", "ติดตามของ", "ขนส่งไหน", "ส่งอะไร",
        "ส่งไวปะ", "ส่งอะไรอะ", "ใช้ขนส่งไหนงับ", "ของมาถึงกี่วัน", "เคอรี่ไหม",
        "ส่งให้วันไหน", "ตามของยังไง", "tracking"
    ],
    "working_hours": [
        "เปิดกี่โมง", "เวลาทำการ", "เปิดวันไหน", "หยุดวันไหน", "เปิดปิดกี่โมง", "เปิดกี่โมง",
        "ติดต่อได้เวลาไหน", "ตอบแชทกี่โมง", "เปิดทุกวันไหม", "ทำงานวันไหนบ้าง", "ปิดกี่โมง",
        "เปิดวันไหนบ้างอะ", "ตอบแชทกี่โมงอะ", "เปิดถึงกี่โมง", "ว่างตอนไหน", "แอดมินตอบตอนไหน"
    ],
    "location": [
        "ที่อยู่", "ตั้งอยู่ที่", "อยู่จังหวัดอะไร", "ไปหน้าร้านได้ไหม", "อยู่ที่ไหน",
        "มีหน้าร้านไหม", "แผนที่", "พิกัด", "ร้านอยู่ที่ไหน", "สามารถไปรับเองได้ไหม", "โรงงานอยู่ที่ไหน",
        "ร้านอยู่แถวไหนอะ", "มีหน้าร้านไหมงับ", "ขอพิกัดหน่อย", "รับเองได้ปะ",
        "มีสาขาแถวนี้ไหม", "โลเคชั่นอยู่ไหน"
    ]
}


@app.route("/analyze", methods=["POST"])
def analyze():
    data = request.get_json(force=True)
    text = data.get("text", "").strip().lower()
    if not text:
        return jsonify({"intent": "unknown"})

    tokens = word_tokenize(text, engine="newmm")
    print(f"[DEBUG] Text: {text}")
    print(f"[DEBUG] Tokens: {tokens}")

    THRESHOLD = 85  # ความคล้ายขั้นต่ำที่ยอมรับสำหรับ fuzzy matching

    for intent, keywords in intent_keywords.items():
        for keyword in keywords:
            keyword = keyword.lower().strip()

            # Exact match
            if keyword in tokens or keyword in text:
                print(f"[DEBUG] Exact match: {keyword}")
                return jsonify({"intent": intent})

            # Fuzzy match (จับคำที่พิมพ์ตก/ผิด)
            for token in tokens:
                score = fuzz.ratio(keyword, token)
                if score >= THRESHOLD:
                    print(f"[DEBUG] Fuzzy match: '{token}' ≈ '{keyword}' with score {score}")
                    return jsonify({"intent": intent})

    return jsonify({"intent": "unknown"})

@app.route("/ping", methods=["GET"])
def ping():
    return "OK", 200

if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)
